{"version":3,"sources":["pages/upcoming-launches/upcoming-launches.js","pages/launch-details/launch-details.js","withRoot.js","pages/index.js","registerServiceWorker.js","index.js"],"names":["RecipeReviewCard","navigateToLaunchDetails","launchId","_this","props","history","push","concat","_this2","this","classes","data","map","payloadSpaceInfo","ldate","net","split","payload","freeForOrder","react_default","a","createElement","Stars_default","color","key","id","Grid_default","item","xs","Card_default","className","card","CardHeader_default","avatar","Avatar_default","alt","lsp","name","src","process","icon","title","subheader","CardMedia_default","component","media","height","image","rocket","imageURL","CardContent_default","Typography_default","rows","location","CardActions_default","actions","orbit","Button_default","variant","onClick","container","justify","spacing","createContent","React","Component","withRouter","withStyles","theme","objectFit","display","backgroundColor","grey","control","padding","unit","LaunchDetails","launch","root","gutterBottom","windowstart","windowend","missions","mission","description","countryCode","size","target","href","wikiURL","pads","pad","latitude","longitude","configuration","familyname","CircularProgress_default","value","payloadUsed","total","payloadCard","Math","floor","orderActions","orderButton","disabled","_this$props","match","launchData","find","Number","params","pageTitle","renderLaunchCard","renderLaunchPadCard","renderRocketCard","renderPayloadCard","textAlign","paddingTop","marginTop","margin","justifyContent","minWidth","createMuiTheme","palette","primary","light","purple","main","dark","secondary","green","typography","useNextVariants","withRoot","core_styles","CssBaseline_default","Index","state","isSideMenuOpen","toggleSideMenu","setState","BrowserRouter","basename","AppBar_default","position","Toolbar_default","IconButton_default","menuButton","aria-label","Menu_default","grow","SwipeableDrawer_default","open","onClose","onOpen","list","List_default","ListItem_default","Link","to","Route","exact","path","UpcomingLaunches","flexGrow","marginLeft","marginRight","width","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","pages","document","querySelector","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.0c1e2430.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withRouter } from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport grey from '@material-ui/core/colors/grey';\nimport data from '../../data/launches.json';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport StarIcon from '@material-ui/icons/Stars';\n\nconst styles = theme => ({\n  card: {\n    height: '100%',\n  },\n  media: {\n    objectFit: 'cover',\n  },\n  actions: {\n    display: 'flex',\n  },\n  avatar: {\n    backgroundColor: grey[50],\n  },\n  control: {\n    padding: theme.spacing.unit * 2,\n  },\n});\n\nclass RecipeReviewCard extends React.Component {\n  navigateToLaunchDetails = (launchId) => () => (\n    this.props.history.push(`launch-details/${launchId}`)\n  );\n\n  createContent() {\n    const { classes } = this.props;\n\n    return data.map(data => {\n      const payloadSpaceInfo = [];\n      const ldate = data.net.split(' ');\n\n      if (data.payload.freeForOrder > 0) {\n        payloadSpaceInfo.push(<StarIcon color='secondary' key={data.id}/>);\n      } else {\n        payloadSpaceInfo.push(<StarIcon color='action' key={data.id}/>);\n      }\n\n      return (\n        <Grid key={data.id} item xs={3}>\n          <Card className={classes.card}>\n            <CardHeader\n              avatar={\n                <Avatar\n                  alt={data.lsp.name}\n                  src={`${process.env.PUBLIC_URL}/${data.lsp.icon}`}\n                  className={classes.avatar}\n                >\n                  {data.lsp.name[0]}\n                </Avatar>\n              }\n              title={data.lsp.name}\n              subheader={ldate[0]+' '+ldate[1]+' '+ldate[2]}/>\n            <CardMedia\n              component=\"img\"\n              alt=\"Contemplative Reptile\"\n              className={classes.media}\n              height=\"150\"\n              image={data.rocket.imageURL}\n              title=\"Contemplative Reptile\"\n            />\n            <CardContent>\n              <Typography component=\"p\">\n                <b>Rocket</b> {data.name.split('|')[0]}\n              </Typography>\n              <Typography component=\"p\" rows=\"1\">\n                <b>Launch</b> {data.name.split('|')[1]}\n              </Typography>\n              <Typography component=\"p\">\n                <b>Location</b> {data.location.name}\n              </Typography>\n            </CardContent>\n            <CardActions className={classes.actions}>\n              <Typography>\n                {data.orbit}\n              </Typography>\n              <Typography>\n                {payloadSpaceInfo}\n              </Typography>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={this.navigateToLaunchDetails(data.id)}\n              >\n                Learn More\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <Grid container justify=\"center\" spacing={16}>\n        {this.createContent()}\n      </Grid>\n    );\n  }\n}\n\nRecipeReviewCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRouter(withStyles(styles)(RecipeReviewCard));\n","import React, { Component } from 'react';\nimport { object } from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withRouter } from 'react-router-dom';\nimport launchData from '../../data/launches.json';\n\n\nconst styles = theme => ({\n  root: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 20,\n  },\n  pageTitle: {\n    marginTop: theme.spacing.unit * 2,\n  },\n  card: {\n    height: '100%',\n    margin: `0 ${theme.spacing.unit}px`,\n  },\n  payloadCard: {\n    marginTop: theme.spacing.unit * 2,\n    textAlign: 'center',\n  },\n  media: {\n    height: 300,\n  },\n  orderActions: {\n    justifyContent: 'center',\n  },\n  orderButton: {\n    minWidth: 300,\n  },\n});\n\nclass LaunchDetails extends Component {\n  static propTypes = {\n    classes: object.isRequired,\n  };\n\n  renderLaunchCard(launch) {\n    const { classes } = this.props;\n    return (\n      <Card classes={{ root: classes.card }}>\n        <CardMedia\n          className={classes.media}\n          image={`${process.env.PUBLIC_URL}/${launch.lsp.icon}`}\n          title={launch.rocket.name}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\">\n            {launch.name}\n          </Typography>\n          <Typography component=\"p\">\n            Window start: <b>{launch.windowstart}</b>\n          </Typography>\n          <Typography component=\"p\">\n            Window start: <b>{launch.windowend}</b>\n          </Typography>\n          <Typography component=\"p\">\n            Orbit: <b>{launch.orbit}</b>\n          </Typography>\n          <Typography gutterBottom variant=\"h6\">\n            Mission\n          </Typography>\n          <Typography component=\"p\">\n            {launch.missions.map(mission => mission.description)}\n          </Typography>\n\n          <Typography gutterBottom variant=\"h6\">\n            Service provider\n          </Typography>\n          <Typography component=\"p\">\n            Name: {launch.lsp.name}\n          </Typography>\n          <Typography component=\"p\">\n            Country: {launch.lsp.countryCode}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\" target=\"_blank\" href={launch.lsp.wikiURL}>\n            Learn more about LSP\n          </Button>\n        </CardActions>\n      </Card>\n    );\n  }\n\n  renderLaunchPadCard(launch) {\n    const { classes } = this.props;\n\n    return (\n      <Card classes={{ root: classes.card }}>\n        <CardMedia\n          className={classes.media}\n          image={`${process.env.PUBLIC_URL}/google_maps.png`}\n          title={launch.location.name}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\">\n            {launch.location.name}\n          </Typography>\n          <Typography component=\"p\">\n            Country: {launch.location.countryCode}\n          </Typography>\n          <Typography gutterBottom variant=\"h5\">\n            Pads\n          </Typography>\n          {launch.location.pads.map(pad => (\n            <div key={pad.id}>\n              <Typography component=\"p\">\n                Name: {pad.name}\n              </Typography>\n              <Typography component=\"p\">\n                Latitude: {pad.latitude}\n              </Typography>\n              <Typography component=\"p\">\n                Longitude: {pad.longitude}\n              </Typography>\n            </div>\n          ))}\n        </CardContent>\n      </Card>\n    );\n  }\n\n  renderRocketCard(launch) {\n    const { classes } = this.props;\n\n    return (\n      <Card classes={{ root: classes.card }}>\n        <CardMedia\n          className={classes.media}\n          image={launch.rocket.imageURL}\n          title={launch.rocket.name}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\">\n            {launch.rocket.name}\n          </Typography>\n          <Typography component=\"p\">\n            Configuration: {launch.rocket.configuration}\n          </Typography>\n          <Typography component=\"p\" gutterBottom>\n            Family name: {launch.rocket.familyname}\n          </Typography>\n          <Typography gutterBottom variant=\"h6\">\n            Flight record\n          </Typography>\n          <CircularProgress\n            variant=\"static\"\n            size={100}\n            value={90}\n          />\n          <Typography variant=\"body2\" component=\"p\">\n            Flights 54/60\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\" target=\"_blank\" href={launch.rocket.wikiURL}>\n            Learn More\n          </Button>\n        </CardActions>\n      </Card>\n    );\n  }\n\n  renderPayloadCard(launch) {\n    const { classes } = this.props;\n    const payloadUsed = (launch.payload.total - launch.payload.freeForOrder) / launch.payload.total;\n\n    return (\n      <Card classes={{ root: classes.payloadCard }}>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\">\n            Payload status\n          </Typography>\n          <CircularProgress\n            variant=\"static\"\n            size={200}\n            value={Math.floor(payloadUsed * 100)}\n          />\n          <Typography variant=\"h4\">\n            Payload available {launch.payload.freeForOrder}/{launch.payload.total}\n          </Typography>\n        </CardContent>\n        <CardActions classes={{ root: classes.orderActions }}>\n          <Button\n            size=\"large\"\n            variant=\"contained\"\n            color=\"secondary\"\n            classes={{ root: classes.orderButton }}\n            disabled={launch.payload.freeForOrder === 0}\n          >\n            Request payload allowance\n          </Button>\n        </CardActions>\n      </Card>\n    );\n  }\n\n  render() {\n    const { match, classes } = this.props;\n    const launch = launchData.find(data => data.id === Number(match.params.launchId));\n\n    return (\n      <div>\n        <Typography variant=\"h2\" gutterBottom classes={{ root: classes.pageTitle }}>\n          {launch.name}\n        </Typography>\n        <Grid container>\n          <Grid item xs={4}>\n            {this.renderLaunchCard(launch)}\n          </Grid>\n          <Grid item xs={4}>\n            {this.renderLaunchPadCard(launch)}\n          </Grid>\n          <Grid item xs={4}>\n            {this.renderRocketCard(launch)}\n          </Grid>\n          <Grid item xs={12}>\n            {this.renderPayloadCard(launch)}\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles)(LaunchDetails));\n","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: purple[300],\n      main: purple[500],\n      dark: purple[700],\n    },\n    secondary: {\n      light: green[300],\n      main: green[500],\n      dark: green[700],\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nfunction withRoot(Component) {\n  function WithRoot(props) {\n    // MuiThemeProvider makes the theme available down the React tree\n    // thanks to React context.\n    return (\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <Component {...props} />\n      </MuiThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}\n\nexport default withRoot;\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { withStyles } from '@material-ui/core/styles';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport UpcomingLaunches from './upcoming-launches';\nimport LaunchDetails from './launch-details';\n\nimport withRoot from '../withRoot';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  list: {\n    width: 250,\n  },\n};\n\nclass Index extends React.Component {\n  state = {\n    isSideMenuOpen: false,\n  };\n\n  toggleSideMenu = (isSideMenuOpen) => () => {\n    this.setState({ isSideMenuOpen });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div>\n          <AppBar position=\"static\">\n            <Toolbar>\n              <IconButton\n                className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"Menu\"\n                onClick={this.toggleSideMenu(true)}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                Marketplace for space traveler\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <SwipeableDrawer\n            open={this.state.isSideMenuOpen}\n            onClose={this.toggleSideMenu(false)}\n            onOpen={this.toggleSideMenu(true)}\n          >\n            <div className={classes.list}>\n              <List>\n                <ListItem>\n                  <Link to=\"/\" onClick={this.toggleSideMenu(false)}>\n                    <Typography variant=\"body1\">Home</Typography>\n                  </Link>\n                </ListItem>\n                <ListItem>\n                  <Link to=\"/upcoming-launches\" onClick={this.toggleSideMenu(false)}>\n                    <Typography variant=\"body1\">Upcoming launches</Typography>\n                  </Link>\n                </ListItem>\n              </List>\n            </div>\n          </SwipeableDrawer>\n          <div>\n            <Route exact path=\"/\" component={UpcomingLaunches} />\n            <Route path=\"/upcoming-launches\" component={UpcomingLaunches} />\n            <Route path=\"/launch-details/:launchId\" component={LaunchDetails} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default withRoot(withStyles(styles)(Index));\n","/* eslint-disable */\n\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ',\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Index from './pages/index';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<Index />, document.querySelector('#root'));\nregisterServiceWorker();\n"],"sourceRoot":""}